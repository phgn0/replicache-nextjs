import type { JSONValue } from "replicache";
import type { Executor } from "./pg.js";
export declare function getEntry(executor: Executor, spaceid: string, key: string): Promise<JSONValue | undefined>;
export declare function putEntry(executor: Executor, spaceID: string, key: string, value: JSONValue, version: number): Promise<void>;
export declare function delEntry(executor: Executor, spaceID: string, key: string, version: number): Promise<void>;
export declare function getEntries(executor: Executor, spaceID: string, fromKey: string): AsyncIterable<readonly [string, JSONValue]>;
export declare function getChangedEntries(executor: Executor, spaceID: string, prevVersion: number): Promise<[key: string, value: JSONValue, deleted: boolean][]>;
export declare function createSpace(executor: Executor, spaceID: string): Promise<void>;
export declare function getCookie(executor: Executor, spaceID: string): Promise<number | undefined>;
export declare function setCookie(executor: Executor, spaceID: string, version: number): Promise<void>;
export declare function getLastMutationID(executor: Executor, clientID: string): Promise<number | undefined>;
export declare function setLastMutationID(executor: Executor, clientID: string, lastMutationID: number): Promise<void>;
